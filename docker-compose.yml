version: '3.9'

services:
  mysql-service:
    image: mysql:latest
    container_name: "${APP}-mysql"
    restart: always
    volumes:
      - ./docker/mysql/logs:/logs/:rw
      - ./docker/mysql/data:/var/lib/mysql/:rw
    environment:
      MYSQL_ROOT_PASSWORD: ""
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    expose:
      - "3306"
    networks:
      default:
        ipv4_address: ${IP_MYSQL}
    command:
      ["--innodb-use-native-aio=0"]

  api-service:
    image: "${API_IMAGE}"
    container_name: "${APP}-api"
    volumes:
      - ./etc/server/config.json:/app/config.json
      - ./docker/server/data:/app/data/:rw
    restart: always
    expose:
      - "8080"
    networks:
      default:
        ipv4_address: ${IP_API}

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: "${APP}-swagger"
    volumes:
      - ./src/server/${API_REPO}/docs/api.swagger.yaml:/docs/api.swagger.yaml:ro
    environment:
      BASE_URL: "/swagger"
      SWAGGER_JSON: /docs/api.swagger.yaml
    expose:
      - "8080"
    networks:
      default:
        ipv4_address: ${IP_SWAGGER}

  nginx-service:
    container_name: $APP-nginx
    image: nginx:latest
    ports:
      - 8080:8080
    volumes:
      - ./docker/nginx/logs:/var/log/nginx
      - ./etc/nginx/conf.d:/etc/nginx/conf.d/
      # static file
      - ./src/web/web:/var/www/web
    extra_hosts:
      - "api-service:${IP_API}"
      - "swagger-ui:${IP_SWAGGER}"
    command: [nginx, '-g', 'daemon off;']
    networks:
      default:
        ipv4_address: ${IP_NGINX}

networks:
  default:
    external: true
    name: ${APP}-net
